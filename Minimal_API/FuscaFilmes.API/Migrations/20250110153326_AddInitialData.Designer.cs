// <auto-generated />
using System;
using FuscaFilmes.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuscaFilmes.API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250110153326_AddInitialData")]
    partial class AddInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("AtorFilme", b =>
                {
                    b.Property<int>("AtoresId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AtoresId", "FilmesId");

                    b.HasIndex("FilmesId");

                    b.ToTable("AtorFilme");

                    b.HasData(
                        new
                        {
                            AtoresId = 1,
                            FilmesId = 1
                        },
                        new
                        {
                            AtoresId = 2,
                            FilmesId = 2
                        },
                        new
                        {
                            AtoresId = 3,
                            FilmesId = 3
                        },
                        new
                        {
                            AtoresId = 4,
                            FilmesId = 4
                        },
                        new
                        {
                            AtoresId = 5,
                            FilmesId = 5
                        },
                        new
                        {
                            AtoresId = 6,
                            FilmesId = 6
                        },
                        new
                        {
                            AtoresId = 2,
                            FilmesId = 5
                        },
                        new
                        {
                            AtoresId = 3,
                            FilmesId = 4
                        },
                        new
                        {
                            AtoresId = 1,
                            FilmesId = 3
                        });
                });

            modelBuilder.Entity("FuscaFilmes.API.Entities.Ator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AwardsCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nationality")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Atores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwardsCount = 5,
                            BirthDate = new DateTime(1965, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Feminino",
                            Name = "Fernanda Torres",
                            Nationality = "Brasileira"
                        },
                        new
                        {
                            Id = 2,
                            AwardsCount = 14,
                            BirthDate = new DateTime(1974, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Masculino",
                            Name = "Leonardo DiCaprio",
                            Nationality = "Americana"
                        },
                        new
                        {
                            Id = 3,
                            AwardsCount = 8,
                            BirthDate = new DateTime(1970, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Feminino",
                            Name = "Uma Thurman",
                            Nationality = "Americana"
                        },
                        new
                        {
                            Id = 4,
                            AwardsCount = 4,
                            BirthDate = new DateTime(1947, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Masculino",
                            Name = "Sam Neill",
                            Nationality = "Neozelandês"
                        },
                        new
                        {
                            Id = 5,
                            AwardsCount = 10,
                            BirthDate = new DateTime(1967, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Masculino",
                            Name = "Jamie Foxx",
                            Nationality = "Americana"
                        },
                        new
                        {
                            Id = 6,
                            AwardsCount = 3,
                            BirthDate = new DateTime(1971, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Masculino",
                            Name = "Henry Thomas",
                            Nationality = "Americana"
                        });
                });

            modelBuilder.Entity("FuscaFilmes.API.Entities.Diretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Diretores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Walter Salles"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Steven Spielberg"
                        });
                });

            modelBuilder.Entity("FuscaFilmes.API.Entities.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiretorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiretorId");

                    b.ToTable("Filmes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ano = 2024,
                            DiretorId = 2,
                            Titulo = "Ainda estou aqui"
                        },
                        new
                        {
                            Id = 2,
                            Ano = 2010,
                            DiretorId = 1,
                            Titulo = "Inception"
                        },
                        new
                        {
                            Id = 3,
                            Ano = 1994,
                            DiretorId = 3,
                            Titulo = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Ano = 1993,
                            DiretorId = 4,
                            Titulo = "Jurassic Park"
                        },
                        new
                        {
                            Id = 5,
                            Ano = 2012,
                            DiretorId = 3,
                            Titulo = "Django Unchained"
                        },
                        new
                        {
                            Id = 6,
                            Ano = 1982,
                            DiretorId = 4,
                            Titulo = "E.T. the Extra-Terrestrial"
                        });
                });

            modelBuilder.Entity("AtorFilme", b =>
                {
                    b.HasOne("FuscaFilmes.API.Entities.Ator", null)
                        .WithMany()
                        .HasForeignKey("AtoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FuscaFilmes.API.Entities.Filme", null)
                        .WithMany()
                        .HasForeignKey("FilmesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FuscaFilmes.API.Entities.Filme", b =>
                {
                    b.HasOne("FuscaFilmes.API.Entities.Diretor", "Diretor")
                        .WithMany("Filmes")
                        .HasForeignKey("DiretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diretor");
                });

            modelBuilder.Entity("FuscaFilmes.API.Entities.Diretor", b =>
                {
                    b.Navigation("Filmes");
                });
#pragma warning restore 612, 618
        }
    }
}
